{"version":3,"sources":["components/NavBar.js","components/HomePage.js","components/ScreePlot.js","components/BiPlot.js","components/ScatterPlotMatrix.js","components/ScatterPlot.js","components/Pcp.js","components/MdsVariable.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","className","onClick","changeChart","src","height","width","HomePage","style","href","color","ScreePlot","useState","scree","setScreeState","dim","setDimState","chartRef","useRef","effective_height","data","tip","chartVariable","d3tip","attr","offset","html","d","useEffect","axios","get","then","repos","allRepos","clearBoard","draw","d3","current","selectAll","remove","undefined","accessToRef","append","xAxis","domain","map","i","range","paddingInner","paddingOuter","call","g","effective_width","text","yAxis","barWidth","bandwidth","enter","on","show","this","transition","duration","hide","stopPropagation","changeDim","datum","x","y","ref","BiPlot","scatterRef","bi","setBiState","chartVariableX","chartVariableY","isXNumeric","isYNumeric","vectors","JSON","parse","loadings","a","mmax","Object","keys","pc1","pc2","point_coordinate","node","ScatterPlotMatrix","table","setTableState","scatter","setScatterState","features","colormap","dimensionality","str","pc","name","index","name1","j","length","key","catch","error","console","calculateCellData","b","c","n","m","push","response","names","cols","slice","pcNames","size","padding","tickFormat","domainByFtr","tickSize","forEach","pcName","svg","each","cell","ps","p","String","first_comp","second_comp","result_array","second","label","item","temp_map","filter","dangerouslySetInnerHTML","__html","ScatterPlot","xData","yData","state","setState","parsedResponse","tempState","first","Pcp","background_lines","foreground_lines","tempDims","dimensions","setDimensions","mdsPcpButton","setMdsPcpButton","margin","dragging","line","readFromMDSV","dimensionz","tempObj","scale","type","create_dimensions","dimension","sort","arr","create_dimensions_msdpcp","coordinate","v","path","draggingV","brushstart","sourceEvent","brush","actives","extent","every","brushObj","Math","min","max","delay","id","value","onChange","e","target","checked","for","MdsVariable","key_array_for_pcp","gNode","updateStatePCP","App","numerical","categorical","mdsPcp","setMDSPCP","chartN","numeric","categoric","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d09244b.chunk.js","sourcesContent":["import '../css/NavBar.css';\nimport React from 'react';\n\nconst NavBar=(props)=>{\n\n    \n    return(\n         <div className=\"mainBar\">\n            <div className=\"options\" onClick={()=>props.changeChart(1)}>\n                <img src=\"https://img.icons8.com/metro/26/000000/combo-chart.png\" height=\"15\" width=\"15\"/><br/><br/>\n                <b>ScreePlot </b>\n            </div>\n            <div className=\"options\" onClick={()=>props.changeChart(2)}>\n                <img src=\"https://img.icons8.com/dotty/80/000000/graph.png\" height=\"15\" width=\"15\" /><br/><br/>\n                <b>BiPlot </b>\n            </div>\n            <div className=\"options\" onClick={()=>props.changeChart(3)}>\n            <img src=\"https://img.icons8.com/small/16/000000/grid.png\" height=\"15\" width=\"15\" /><br/><br/>\n                <b>ScatterPlot Matrix </b>\n            </div>\n            <div className=\"options\" onClick={()=>props.changeChart(4)}>\n                <img src=\"https://img.icons8.com/metro/26/000000/scatter-plot.png\" height=\"15\" width=\"15\" /><br/><br/>\n                <b>MDS Data Plot</b>\n            </div>\n            <div className=\"options\" onClick={()=>props.changeChart(5)}>\n                <img src=\"https://img.icons8.com/metro/26/000000/scatter-plot.png\" height=\"15\" width=\"15\" /><br/><br/>\n                <b>MDS Variables Plot </b>\n            </div>\n            <div className=\"options\" onClick={()=>props.changeChart(6)}>\n            <img src=\"https://img.icons8.com/fluent-systems-filled/24/000000/grip-lines-vertical.png\" height=\"15\" width=\"15\" /><br/><br/>\n                <b>Parallel Coordinates Plot </b>\n            </div>\n        </div>\n    );\n};\n\nexport default NavBar;","import React from 'react';\n\n const HomePage = (props) => {\n\n\n    return(\n        <div>\n            <div> \n                <br/><br/><br/>\n                <div style={{width:\"80%\"}}>\n                This project is completed in accordance with the requirements of the course CSE-564 : Visualization at Stony Brook University.<br/>\n                The project provides an interactive Visualization of New York Housing Units Data (by buildings) made publically available at NYC OpenData(<a href=\"https://data.cityofnewyork.us/Housing-Development/Housing-New-York-Units-by-Building/hg8x-zxpr\">here</a>) by The Department of Housing Preservation and Development (HPD).<br/><br/>\n            \n                The dataset contains New Yorks housing data per building for each building project and its related data. The dataset consists of 4,732 Rows and 42 Columns. The data was processed, cleaned to obtain a dataset of 15(+1) useful columns and 1500 randomly sampled rows using a python script.\n\n                The following are the definitions of the attributes in the sampled data:<br/>\n                \n                    <ul><b>Numeric Variables</b>\n                    <li><b><font style={{color:\"#2e8083\"}}>Extremely Low Income Units</font></b> - Units with rents that are affordable to households earning 0 to 30% of the area median income (AMI).</li>\n                    <li><b><font style={{color:\"#2e8083\"}}>Very Low Income Units </font></b>- Units with rents that are affordable to households earning 31 to 50% of the area median income (AMI).</li>\n                    <li><b><font style={{color:\"#2e8083\"}}>Low Income Units </font></b>– Units with rents that are affordable to households earning 51 to 80% of the median income (AMI).</li>\n                    <li><b><font style={{color:\"#2e8083\"}}>Counted Rental Units </font></b>– Units where assistance has been provided to landlords for affordable units.</li>\n                    <li><b><font style={{color:\"#2e8083\"}}>Counted Homeownership Units </font></b>– Units where assistance has been provided directly to homeowners.</li>\n                    <li><b><font style={{color:\"#2e8083\"}}>Total Counted Units </font></b>- Total number of affordable, regulated units in the building. </li>\n                    <li><b><font style={{color:\"#2e8083\"}}>Total Units </font></b>- The total number of units, affordable and market rate, in each building.</li>\n\n                    </ul>\n                    <ul><b>Categorical Variables</b>\n                    <li><b><font style={{color:\"#2e8083\"}}> Program Group </font></b>- The project group/category for a building project</li>\n                    <li><b><font style={{color:\"#2e8083\"}}> Borough </font></b>- The Borough where the building is located.</li>\n                    <li><b><font style={{color:\"#2e8083\"}}> PostCode </font></b>- The ZipCode where the building is located.</li>\n                    <li><b><font style={{color:\"#2e8083\"}}> Council District </font></b>- The NYC Council District where the building is located.</li>\n                    <li><b><font style={{color:\"#2e8083\"}}> Census Tract </font></b> – The 2010 U.S. Census Tract number where the building is located.</li>\n                    <li><b><font style={{color:\"#2e8083\"}}> NTA - Neighborhood Tabulation Area </font></b>– The NYC Neighborhood Tabulation Area number where the building is located.</li>\n                    <li><b><font style={{color:\"#2e8083\"}}> Reporting Construction Type </font></b>– Either a ‘new construction’ or ‘preservation’\n                        <ul>\n                            <li>‘New construction’ – New affordable housing units are created, or down payment assistance is given to a homeowner to access an affordable home.</li>\n                            <li>‘Preservation’ - Existing buildings receive physical rehabilitation and/or financial operating assistance is for existing and future tenants. </li>\n                        </ul>\n                    </li>\n                    <li><b><font style={{color:\"#2e8083\"}}>Prevailing wage status </font></b>- Whether the project is subject to any prevailing wage requirements, such as Davis Bacon.</li>\n                    </ul>\n                </div>\n            </div>\n            <div>Source:<br/> \n                1. DataSet and Rephrased Definitions: https://data.cityofnewyork.us/Housing-Development/Housing-New-York-Units-by-Building/hg8x-zxpr<br/>\n                2. Icons : https://icons8.com/icons/\n            </div>\n        </div>\n    );\n\n};\nexport default HomePage;\n\n\n","import React,{useEffect,useRef,useState} from 'react';\nimport * as d3 from 'd3';\nimport d3tip from \"d3-tip\";\nimport axios from 'axios';\n\n const ScreePlot=(props)=>{\n\n    const colors=[\"blue\",\"green\",\"gold\",\"grey\",\"orange\",\"yellow\",\"pink\",\"cyan\",\"magenta\",\"brown\",\"black\",\"tomato\"];\n    const [scree, setScreeState] = useState();\n    const [dim, setDimState] = useState();\n    const chartRef = useRef(null);\n    let data= props.data;\n    const width = 1000;\n    const height = 500;\n    const margin_left=100;\n    const margin_right=30;\n    const margin_top=20;\n    const margin_bottom=100;\n    const effective_width= width - margin_left - margin_right;\n    const effective_height= height - margin_top - margin_bottom;\n    let chartVariable= props.chartVariable;\n\n    const tip = d3tip()\n    .attr('class', 'd3-tip animate')\n    .offset([-20, 0])\n    .html(function(d) {\n        return '<strong><font color=\"red\">'+ d+'</font></strong>';\n      });\n\n    useEffect(()=>{\n\n        axios.get('http://localhost:5000/scree_plot').then((repos) => {\n            const allRepos = repos.data;\n            setScreeState(allRepos);\n          });\n\n        clearBoard();\n        draw();\n    },[props]);\n\n    const clearBoard = ()=>{\n        const accessToRef = d3.select(chartRef.current)\n        accessToRef.selectAll(\"svg > *\").remove();\n        d3.select(\".d3-tip\").remove();\n    }\n\n    const draw=()=>{\n    if(scree!=undefined)\n    {\n        const accessToRef = d3.select(chartRef.current)\n        .attr(\"height\",height)\n        .attr(\"width\",width)\n        .style(\"background-color\",\"#f5f5f5\")\n        .append(\"g\")\n            .attr(\"transform\",\"translate(\"+margin_left+\",\"+margin_top+\")\"); \n\n        var xAxis = d3.scaleBand()\n                    .domain(scree['variance'].map(function(d,i) { return \"PC \"+ (i+1); }))\n                    .range([0, effective_width])\n                    .paddingInner(0.1)\n                    .paddingOuter(0.1);\n\n        accessToRef.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + effective_height + \")\")\n            .call(d3.axisBottom(xAxis))\n            .call(g => g.append(\"text\")\n                .style(\"font-size\", \"18px\")\n                .attr(\"x\", effective_width/2)\n                .attr(\"y\", -margin_top+80)\n                .attr(\"fill\", \"currentColor\")\n                .attr(\"text-anchor\", \"start\")\n                .text(\"Principal Components\"));\n\n        var yAxis = d3.scaleLinear()\n            .range([effective_height, 0])\n            .domain([0, 1]);//d3.max(scree['variance'],function(d) { return 1.2*d; })]); \n  \n        accessToRef.append(\"g\")\n            //.attr(\"transform\", \"translate(0\"+\",\"+margin_bottom+\")\")\n            .call(d3.axisLeft(yAxis))\n            .call(g => g.append(\"text\")\n                .style(\"font-size\", \"18px\")\n                .attr(\"x\", -effective_height/2)\n                .attr(\"y\", -margin_left+20)\n                .attr(\"fill\", \"currentColor\")\n                .attr(\"text-anchor\", \"end\")\n                .attr(\"transform\", \"rotate(-90)\")\n                .text(\"Explained Variance\"));\n\n        let barWidth= xAxis.bandwidth();\n        accessToRef.selectAll(\"rect\")\n            .data(scree['variance'])\n            .enter()\n            .append(\"rect\")\n                .attr(\"x\",(d,i) => {return xAxis(\"PC \"+ (i+1))}) \n                .attr(\"y\",(d,i) => { return  yAxis(d)})\n                .attr(\"width\", barWidth)\n                .attr(\"height\",(d,i)=> {return effective_height - yAxis(d)})\n                .style(\"fill\",(d,i)=> \"blue\")\n                .on('mouseover', function (d, i) {\n                    tip.show(d,this);\n                    d3.select(this)\n                         .transition()\n                         .duration('50')\n                         .style(\"fill\",\"red\");\n                })\n                .on('mouseout', function (d, i) {\n                    d3.select(this).transition()\n                         .duration('50')\n                         .style(\"fill\",\"blue\");\n                    tip.hide();\n                })\n                .on(\"click\", function(d,i) {\n                    setDimState(i);\n                    d3.event.stopPropagation();\n                    props.changeDim(i+1);\n                  });\n\n        accessToRef.append(\"path\")\n                .datum(scree[\"variance_cumulative\"])\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke\", \"steelblue\")\n                .attr(\"stroke-width\", 1.5)\n                .attr(\"d\", d3.line()\n                  .x(function(d,i) { return xAxis(\"PC \"+ (i+1))+ xAxis.bandwidth()/2})\n                  .y(function(d) { return yAxis(d) })\n                  );\n        accessToRef.selectAll(\"myCircles\")\n                  .data(scree[\"variance_cumulative\"])\n                  .enter()\n                  .append(\"circle\")\n                    .attr(\"fill\", \"red\")\n                    .attr(\"stroke\", \"none\")\n                    .attr(\"cx\", function(d,i) { return xAxis(\"PC \"+ (i+1)) + xAxis.bandwidth()/2 })\n                    .attr(\"cy\", function(d) { return yAxis(d) })\n                    .attr(\"r\", 3)\n                  .on('mouseover', function (d, i) {\n                        tip.show(d,this);\n                    })\n                    .on('mouseout', function (d, i) {\n                        tip.hide();\n                    });\n        accessToRef.call(tip);\n    }\n}\n\n    return(\n        <div>\n            <h3><u>Scree Plot</u></h3>\n            <div>Dimensionality index is : {dim+1 ? dim+1:\" Select Dimensionality Index\"} </div>\n            {scree ? <svg ref={chartRef}></svg> :<div/>}\n        </div>\n    );\n};\n\nexport default ScreePlot;\n","import React,{useEffect,useRef,useState} from 'react';\nimport * as d3 from 'd3';\nimport '../css/ScatterPlot.css';\nimport axios from 'axios';\n\n const BiPlot = (props) => {\n\n    let scatterRef = useRef(null);\n    const [bi, setBiState] = useState();\n    let data= props.data;\n    let width = 1000;\n    let height = 500;\n    const margin_left=100;\n    const margin_right=10;\n    const margin_top=20;\n    const margin_bottom=70;\n    const effective_width= width - margin_left - margin_right;\n    const effective_height= height - margin_top - margin_bottom;\n    const xVariable = props.chartVariableX;\n    const yVariable = props.chartVariableY;\n    const isXNumeric = props.isXNumeric;\n    const isYNumeric = props.isYNumeric;\n\n    useEffect(()=>{\n        axios.get('http://localhost:5000/bi_plot').then((repos) => {\n            const allRepos = repos.data;\n            let  vectors = JSON.parse(allRepos['eigen_vectors'][0]);\n            let loadings = JSON.parse(allRepos['feature_coordinates'][0]);\n            let obj={\n                'eigen_vectors':vectors,\n                'feature_coordinates':loadings\n            };\n            setBiState(obj);\n            clearBoard();\n            draw();\n          });\n\n    },[props]);\n\n    useEffect(()=>{\n        clearBoard();\n        draw();\n    },[bi])\n\n    const clearBoard=()=>{\n        const accessToRef = d3.select(scatterRef.current)\n        accessToRef.selectAll(\"svg > *\").remove();\n    }\n\n    const draw =() =>{\n    if(bi!=undefined)\n    {\n        let xdataGrouped,ydataGrouped;\n\n        const accessToRef = d3.select(scatterRef.current)\n                                .attr(\"height\",height)\n                                .attr(\"width\",width)\n                                .style(\"background-color\",\"#f5f5f5\")\n                                .append(\"g\")\n                                    .attr(\"transform\", \"translate(\" + margin_left + \",\" + margin_top + \")\");\n\n        let a=bi['eigen_vectors']['PC 1'];\n        let b=[2.111111,2.13223434,2.174354353];\n        let mmax = d3.max(Object.keys(a), function(d,i) { return 1 })\n        var xAxis = d3.scaleLinear()\n                    .domain([-mmax, d3.max(Object.keys(a), function(d,i) { return 1 })])\n                    .range([ 0, effective_width ]);\n\n        accessToRef.append(\"g\")\n                   .attr(\"transform\", \"translate(0,\" + effective_height + \")\")\n                   .call(d3.axisBottom(xAxis))\n                   .call(g => g.append(\"text\")\n                    .style(\"font-size\", \"18px\")\n                    .attr(\"x\", effective_width/2)\n                    .attr(\"y\", -margin_top+80)\n                    .attr(\"fill\", \"blue\")\n                    .attr(\"text-anchor\", \"start\")\n                    .text(\"PC 1\"));\n\n        a = bi['eigen_vectors']['PC 2'];\n        mmax= d3.max(Object.keys(a), function(d,i) { return 1 });\n        var yAxis = d3.scaleLinear()\n                  .domain([-mmax,mmax ])\n                  .range([ effective_height, 0]);\n\n        accessToRef.append(\"g\")\n            .call(d3.axisLeft(yAxis))\n            .call(g => g.append(\"text\")\n                .style(\"font-size\", \"18px\")\n                .attr(\"x\", -effective_height/2+100)\n                .attr(\"y\", -margin_left+20)\n                .attr(\"fill\", \"red\")\n                .attr(\"text-anchor\", \"end\")\n                .attr(\"transform\", \"rotate(-90)\")\n                .text(\"PC 2\"));\n        \n        let pc1 = bi['eigen_vectors'][\"PC 1\"];\n        let pc2 = bi['eigen_vectors'][\"PC 2\"];\n        accessToRef.append('g')\n            .selectAll(\"dot\")\n            .data(Object.keys(bi['eigen_vectors'][\"PC 1\"]))\n            .enter()\n                .append(\"circle\")\n                .attr(\"cx\", function (d,i) { return xAxis(pc1[d])})\n                .attr(\"cy\", function (d,i) { return yAxis(pc2[d])})\n                .attr(\"r\", 3)\n                .style(\"fill\", \"green\");\n\n        let point_coordinate=0.38;\n        pc1 = bi['feature_coordinates'][\"PC 1\"];\n        pc2 = bi['feature_coordinates'][\"PC 2\"];\n        let node= accessToRef.append('g');\n        node.selectAll('.line')\n            .data(Object.keys(bi[\"feature_coordinates\"][\"PC 1\"]))\n            .enter()\n            .append('line')\n                .style(\"stroke\", \"black\")\n                .style(\"stroke-width\", 1)\n                .attr(\"x1\", function(d,i) { return xAxis(-point_coordinate)})\n                .attr(\"y1\", function(d,i) { return yAxis((pc2[d]/pc1[d])*-point_coordinate)})\n                .attr(\"x2\", function(d,i) { return  xAxis(point_coordinate)})\n                .attr(\"y2\", function(d,i) { return yAxis((pc2[d]/pc1[d])*point_coordinate) });\n        \n        node.selectAll('text')\n            .data(Object.keys(bi[\"feature_coordinates\"][\"PC 1\"]))\n            .enter()\n            .append(\"text\")\n            .attr(\"x\", function(d,i) { return xAxis(point_coordinate) })\n            .attr(\"y\", function(d,i){ return yAxis((pc2[d]/pc1[d])*point_coordinate)})\n            .attr(\"dy\", \".35em\")\n            .style(\"font-size\", \"10px\")\n            .text(function(d) { return d; });\n        \n        }\n    }\n    return(\n        <div>\n            {\n              bi ? \n              <div>\n                  <h3><u>PCA-based Biplot</u></h3>\n                  <svg ref={scatterRef}></svg>\n              </div> : <div >Loading</div>\n            }\n        </div>\n    );  \n};\nexport default BiPlot;\n\n\n","import React,{useEffect,useRef,useState} from 'react';\nimport * as d3 from 'd3';\nimport '../css/ScatterPlot.css';\nimport axios from 'axios';\n\n const ScatterPlotMatrix = (props) => {\n\n    const [table, setTableState] = useState();\n    const [scatter, setScatterState] = useState();\n    let scatterRef = useRef(null);\n    let data= props.data;\n    let width = 1000;\n    let height = 500;\n    const features=[];\n    const colormap=[\"red\",\"blue\",\"green\",\"gold\"];\n\n    useEffect(()=>{\n        \n        axios.get('http://localhost:5000/loading/'+(props.dimensionality?props.dimensionality:4)).then((repos) => {\n            const allRepos = repos.data;\n            let data= JSON.parse(allRepos);\n            let str='<table style=\"border: 1px solid black\">';\n            let pc=[];\n            let features=[];\n            Object.keys(data).map(function(name, index){\n                pc[index]=name\n            });\n            Object.keys(data).map(function(name, index){\n                Object.keys(data[name]).map(function(name1,index){\n                            features[index]=name1;\n                })\n            });\n            str+='<tr><th>Features</th>';\n            for(let j=0;j<pc.length;j++)\n            {\n                str+='<th>'+pc[j]+'</th>';\n            }\n            str+='</tr>';\n            for(let i=0;i<4;i++)\n            {\n                str+='<tr><td><b>'+features[i]+'</b></td>';\n                for(let j=0;j<pc.length;j++)\n                {\n                    str+='<td>'+data[pc[j]][features[i]]+'</td>';\n                }\n                str+='</tr>';\n            }\n            str+='</table>';\n            setTableState(str);\n          });\n\n        axios.get('http://localhost:5000/scatterplotmatrix').then((repos) => {\n            const allRepos = repos.data;\n            let data= JSON.parse(allRepos);\n            let temp=data;\n            setScatterState(data);\n            Object.keys(data).map(function(key,index){\n                features[index]=key;\n            })\n            \n            clearBoard();\n            draw();\n        })\n        .catch((error) => {\n            console.error(\"error\",error);\n        });\n    },[props]);\n\n    useEffect(()=>{\n        clearBoard();\n        draw();\n    },[scatter]);\n\n    const clearBoard=()=>{\n        const accessToRef = d3.select(scatterRef.current)\n        accessToRef.selectAll(\"svg > *\").remove();\n    }\n\n    const calculateCellData=(a, b)=>{\n        var c = [], n = a.length, m = b.length, i, j;\n        for (i = -1; ++i < n;) for (j = -1; ++j < m;) c.push({x: a[i], i: i, y: b[j], j: j});\n        return c;\n    }\n\n    const draw =() =>{\n        if(scatter!=undefined)\n        {\n        var response = scatter;\n        let names=[];\n        Object.keys(response).map(function(name,index){\n            names[index]=name;\n        });\n        let cols = names.slice(0, -1);\n        var pcNames = new Object(cols);\n        var width = 1000,\n        size = 250,\n        padding = 20;\n        var x = d3.scaleLinear()\n                .range([padding/2, size - padding/2]);\n        var y = d3.scaleLinear()\n                .range([size - padding/2, padding/2]);\n        var xAxis = d3.axisBottom(x).tickFormat(function(d){ return d;});\n        var yAxis = d3.axisLeft(y).tickFormat(function(d){ return d;});\n        var color = d3.scaleOrdinal(d3.schemeCategory10);\n        data = {};\n        for(let i=0;i<5;i++)\n            data[names[i]]= response[names[i]];\n        var domainByFtr = {},\n        n = pcNames.length;\n        xAxis.tickSize(size * n);\n        yAxis.tickSize(-size * n);\n        pcNames.forEach(function(pcName) {\n            domainByFtr[pcName] = d3.extent(d3.values(data[pcName]));\n        });\n\n        const svg = d3.select(scatterRef.current)\n                        .attr('id', 'chart')\n                        .attr(\"width\", size * n + padding)\n                        .attr(\"height\", size * n + padding)\n                        .append(\"g\")\n                        .attr(\"transform\", \"translate(\" + padding + \",\" + padding / 2 + \")\");\n\n        svg.selectAll(\".x.axis\")\n            .data(pcNames)\n            .enter().append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", function(d, i) { return \"translate(\" + (n - i - 1) * size + \",0)\"; })\n            .each(function(d) { x.domain(domainByFtr[d]); d3.select(this).call(xAxis); });\n\n        svg.selectAll(\".y.axis\")\n            .data(pcNames)\n            .enter().append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * size + \")\"; })\n            .each(function(d) { y.domain(domainByFtr[d]); d3.select(this).call(yAxis); });\n\n        svg.append(\"text\")\n            .attr(\"x\", (width / 2))\n            .attr(\"y\", 0 + (5))\n            .attr(\"text-anchor\", \"middle\")\n            .style(\"font-size\", \"16px\")\n            .style(\"text-decoration\", \"underline\")\n            .style(\"font-weight\", \"bold\")\n            .text(\"ScatterPlot Matrix\");\n\n        var cell = svg.selectAll(\".cell\")\n            .data(calculateCellData(pcNames, pcNames))\n            .enter().append(\"g\")\n            .attr(\"class\", function(d) {return \"cell\"+(n - d.i - 1)+d.j;})\n            .attr(\"transform\", function(d) { return \"translate(\" + (n - d.i - 1) * size + \",\" + d.j * size + \")\"; })\n            ;\n\n        let ps= calculateCellData(pcNames,pcNames);\n        for(let i=0;i<16;i++){\n            let p=ps[i];\n            x.domain(domainByFtr[String(p.x)]);\n            y.domain(domainByFtr[String(p.y)]);\n            d3.selectAll(\"g.cell\"+(n - p.i - 1)+p.j).append(\"rect\")\n                .attr(\"id\", \"frame\")\n                .attr(\"class\",\"rec\")\n                .attr(\"x\", padding / 2)\n                .attr(\"y\", padding / 2)\n                .attr(\"width\", size - padding)\n                .attr(\"height\", size - padding)\n                .style(\"fill\",\"#e7e7e7\")\n                .style(\"fill-opacity\",0.7);\n            let first_comp = data[String(p.x)];\n            let second_comp = data[String(p.y)];\n            let result_array = []\n            let second = d3.values(second_comp)\n            let label = d3.values(data[\"color\"]);\n            d3.values(first_comp).forEach(function(item, index) {\n                let temp_map = {};\n                temp_map[\"x\"] = item;\n                temp_map[\"y\"] = second[index];\n                temp_map[\"color\"] = label[index];\n                result_array.push(temp_map);\n            });\n            d3.selectAll(\"g.cell\"+(n - p.i - 1)+p.j).selectAll(\"circle\")\n                    .data(result_array)\n                    .enter().append(\"circle\")\n                    .attr(\"cx\", function(d) { return x(d.x); })\n                    .attr(\"cy\", function(d) { return y(d.y); })\n                    .attr(\"r\", 3)\n                    .style(\"fill\", function(d) { return  colormap[d.color]});\n        }\n\n        cell.filter(function(d) { return d.i === d.j; }).append(\"text\")\n            .attr(\"x\", size/2-padding-30)\n            .attr(\"y\", size/2-padding)\n            .attr(\"dy\", \".65em\")\n            .style(\"font-weight\", \"bold\")\n            .style(\"font-size\", \"20px\")\n            .text(function(d) { return d.x; });\n    }\n}\n\n    return(\n        <div>\n            <br/><br/>\n            { \n                table ?   <div className=\"content\" dangerouslySetInnerHTML={{__html: table}}></div>\n                 : <div />  \n            }\n            <br/><br/>\n            {\n                scatter ? <div><svg ref={scatterRef}></svg>\n                <br/><br/><br/>\n                <div className=\"legend\"><b>Color Legend</b><br/>\n                    Red   -  Cluster 1<br/>\n                    Blue  -  Cluster 2<br/>\n                    Green -  Cluster 3<br/>\n                    Gold  -  Cluster 4<br/>\n                </div>\n                <br/>\n                </div> : <div />\n                \n            }\n            </div>\n    );\n\n};\nexport default ScatterPlotMatrix;\n\n\n","import React,{useEffect,useRef,useState} from 'react';\nimport * as d3 from 'd3';\nimport '../css/ScatterPlot.css';\nimport axios from 'axios';\n\n const ScatterPlot = (props) => {\n\n    let scatterRef = useRef(null);\n    const [state, setState] = useState();\n    let data= props.data;\n    let width = 1000;\n    let height = 500;\n    const margin_left=100;\n    const margin_right=30;\n    const margin_top=20;\n    const margin_bottom=100;\n    const effective_width= width - margin_left - margin_right;\n    const effective_height= height - margin_top - margin_bottom;\n    let xData ; \n    let yData ; \n    let color ; \n    const colormap=[\"red\",\"blue\",\"black\",\"green\"];\n    useEffect(()=>{\n        axios.get('http://localhost:5000/mds_data').then((repos) => {\n            const allRepos = repos.data;\n            let parsedResponse = JSON.parse(allRepos);\n            let tempState = {'first':parsedResponse['first'],'second':parsedResponse['second'],'color':parsedResponse['color']};\n            setState(tempState);\n            clearBoard();\n            draw();\n      });\n        clearBoard();\n        //draw();\n    },[props]);\n\n    useEffect(()=>{\n        clearBoard();\n        draw();\n    },[state])\n\n    const clearBoard=()=>{\n        const accessToRef = d3.select(scatterRef.current)\n        accessToRef.selectAll(\"svg > *\").remove();\n    }\n\n    const draw =() =>{\n        if(state!=undefined)\n        {\n             xData = state.first;\n            yData = state.second;\n        }\n        if(xData!=undefined && yData!=undefined)\n        {\n            const accessToRef = d3.select(scatterRef.current)\n                                    .attr(\"height\",height)\n                                    .attr(\"width\",width)\n                                    .style(\"background-color\",\"#f5f5f5\")\n                                    .append(\"g\")\n                                    .attr(\"transform\", \"translate(\" + margin_left + \",\" + margin_top + \")\");\n\n            var xAxis= d3.scaleLinear()\n                        .domain([d3.min(Object.keys(xData), function(d) { return 1.2*xData[d] }), d3.max(Object.keys(xData), function(d) { return 1.2*xData[d] })])\n                        .range([ 0, effective_width ]);\n            \n            accessToRef.append(\"g\")\n                    .attr(\"transform\", \"translate(0,\" + effective_height + \")\")\n                    .call(d3.axisBottom(xAxis))\n                    .call(g => g.append(\"text\")\n                        .style(\"font-size\", \"18px\")\n                        .attr(\"x\", effective_width/2)\n                        .attr(\"y\", -margin_top+80)\n                        .attr(\"fill\", \"blue\")\n                        .attr(\"text-anchor\", \"start\")\n                        .text(\"Component 1\"));\n            \n            var yAxis = d3.scaleLinear()\n                    .domain([d3.min(Object.keys(yData), function(d) { return 1.2*yData[d] }), d3.max(Object.keys(yData), function(d) { return 1.2*yData[d] })])\n                    .range([ effective_height, 0]);\n\n            accessToRef.append(\"g\")\n                .call(d3.axisLeft(yAxis))\n                .call(g => g.append(\"text\")\n                    .style(\"font-size\", \"18px\")\n                    .attr(\"x\", -effective_height/2+100)\n                    .attr(\"y\", -margin_left+20)\n                    .attr(\"fill\", \"red\")\n                    .attr(\"text-anchor\", \"end\")\n                    .attr(\"transform\", \"rotate(-90)\")\n                    .text(\"Component 2\"));\n            \n            accessToRef.append('g')\n                .selectAll(\"dot\")\n                .data(Object.keys(xData))\n                .enter()\n                    .append(\"circle\")\n                    .attr(\"cx\", function (d) { return xAxis(xData[d])  })\n                    .attr(\"cy\", function (d) { return yAxis(yData[d]) } )\n                    .attr(\"r\", 3)\n                    .style(\"fill\", function (d) { return colormap[state.color[d]]})   ;\n        }\n}\n    return(\n        <div>\n            <br/><br/><br/>\n            {\n              state ? <div>\n                <h3><u>MDS Data Plot using Euclidian distance</u></h3>\n                <svg ref={scatterRef}></svg>\n                <br/>\n                <div className=\"legend\"><b>Color Legend</b><br/>\n                    Red   -  Cluster 1<br/>\n                    Blue  -  Cluster 2<br/>\n                    Black-  Cluster 3<br/>\n                    Green  -  Cluster 4<br/>\n                </div>\n                <br/>\n              </div>: <div > Loading .... </div>\n            }\n        </div>\n    );\n\n};\nexport default ScatterPlot;\n\n\n","import React,{useEffect,useRef,useState} from 'react';\nimport * as d3 from 'd3';\nimport '../css/ScatterPlot.css';\nimport axios from 'axios';\nimport '../css/Pcp.css';\n\n const Pcp = (props) => {\n    let scatterRef = useRef(null);\n    const [state, setState] = useState();\n    const [dimensions, setDimensions] = useState();\n    const [mdsPcpButton, setMdsPcpButton] = useState(false);\n    var margin = {top: 50, right: 50, bottom: 50, left: 50};\n    var width = 1400 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n    var y = {};\n    var dragging = {};\n    var line = d3.line();\n    var background_lines,foreground_lines;\n    var tempDims;\n    const colormap=[\"red\",\"blue\",\"black\",\"green\"];\n    const create_dimensions=(tempState)=>{\n        let dimensionz =[];\n        let tempObj={};\n        Object.keys(tempState[0]).map(function(key,index){\n            if(key!='color'){\n                if(typeof tempState[0][key] ===\"number\")\n                {\n                    tempObj={\n                        name: key,\n                        scale: d3.scaleLinear().range([height, 0]),\n                        type: \"number\"\n                    };\n                }\n                else\n                {\n                    tempObj={\n                        name: key,\n                        scale: d3.scaleBand().range([0, height]),\n                        type: \"string\"\n                    };\n                }\n                dimensionz.push(tempObj);\n            }\n        });\n        setDimensions(dimensionz);\n        tempDims=dimensionz;\n    }\n\n    const create_dimensions_msdpcp=(arr)=>{\n        let dimensionz =[];\n        let tempObj={};\n        for(let i=0;i<arr.length;i++)\n        {\n            tempObj={\n                    name: arr[i],\n                    scale: d3.scaleLinear().range([height, 0]),\n                    type: \"number\"\n                };\n            dimensionz.push(tempObj);\n        }\n        setDimensions(dimensionz);\n        tempDims=dimensionz;\n    };\n    \n    var x;\n\n    useEffect(()=>{\n        if(props.readFromMDSV==undefined || mdsPcpButton==false){\n            axios.get('http://localhost:5000/pcp').then((repos) => {\n                const allRepos = repos.data;\n                let parsedResponse = JSON.parse(allRepos);\n                let tempState = parsedResponse;\n                var no_of_dimensions = Object.keys(parsedResponse[0]).length - 1;\n                create_dimensions(parsedResponse);\n                    tempDims.forEach(function(dimension) {\n                        dimension.scale.domain(dimension.type === \"number\"\n                            ? d3.extent(parsedResponse, function(d) { return +d[dimension.name]; })\n                            : parsedResponse.map(function(d) { return d[dimension.name]; }).sort());\n                    });\n                setState(tempState);\n                clearBoard();\n                draw();\n            });\n        }\n        else if(mdsPcpButton==true){\n            axios.get('http://localhost:5000/mdspcp').then((repos) => {\n                const allRepos = repos.data;\n                let parsedResponse = JSON.parse(allRepos);\n                let tempState = parsedResponse;\n                create_dimensions_msdpcp(props.readFromMDSV);\n                    tempDims.forEach(function(dimension) {\n                        dimension.scale.domain(dimension.type === \"number\"\n                            ? d3.extent(parsedResponse, function(d) { return +d[dimension.name]; })\n                            : parsedResponse.map(function(d) { return d[dimension.name]; }).sort());\n                    });\n                setState(tempState);\n                clearBoard();\n                draw();\n            });\n        }\n        clearBoard();\n        draw();\n    },[props,mdsPcpButton]);\n\n    useEffect(()=>{\n        clearBoard();\n        draw();\n    },[state,dimensions]);\n\n    const clearBoard=()=>{\n        const accessToRef = d3.select(scatterRef.current);\n        accessToRef.selectAll(\"svg > *\").remove();\n    }\n\n\n    const coordinate=(d)=>{\n        var v = dragging[d.name];\n        return v == null ? x(d.name) : v;\n    }\n\n    const transition=(g)=>{\n        return g.transition().duration(500);\n    }\n\n    const path=(d)=>{\n        return line(dimensions.map(function(dimension) {\n            var draggingV = dragging[dimension.name];\n            var xpoint = draggingV == undefined ? x(dimension.name) : draggingV;\n            let ypoint = dimension.type===\"string\" ? dimension.scale(d[dimension.name]) + dimension.scale.bandwidth()/2 : dimension.scale(d[dimension.name]);\n            return [xpoint, ypoint];\n        }));\n    }\n            \n     const brushstart=()=>{\n            d3.event.sourceEvent.stopPropagation();\n    };\n\n    const brush=(svg)=>{\n        var actives = [];\n        svg.selectAll(\".brush\")\n            .filter(function (d) {\n                return d3.brushSelection(this);\n            })\n            .each(function (key) {\n                actives.push({\n                    dimension: key,\n                    extent: d3.brushSelection(this)\n                });\n            });\n        if (actives.length === 0) {\n            foreground_lines.style(\"display\", null);\n        } else {\n            foreground_lines.style(\"display\", function (d) {\n                return actives.every(function (brushObj) {\n                    return brushObj.extent[0] <= brushObj.dimension.scale(d[brushObj.dimension.name]) && brushObj.dimension.scale(d[brushObj.dimension.name]) <= brushObj.extent[1];\n                }) ? null : \"none\";\n            });\n        }\n    }\n\n    const handleChange=(e)=>{\n        if(e.target.checked==true)\n        {\n            setMdsPcpButton(true);\n        }\n        else{\n            setMdsPcpButton(false);\n        }\n    }\n\n    const draw =() =>{\n\n        if(state!=undefined){\n            x = d3.scalePoint()\n                    .domain(dimensions.map(function(d) { return d.name; }))\n                    .range([0, width]);\n\n            var svg = d3.select(scatterRef.current)\n                        .attr(\"width\", width + margin.left + margin.right)\n                        .attr(\"height\", height + margin.top + margin.bottom)\n                        .append(\"g\")\n                        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n            \n            if(state!=undefined){\n                background_lines = svg.append(\"g\")\n                                .attr(\"class\", \"background\")\n                                .selectAll(\"path\")\n                                .data(state)\n                                .enter()\n                                .append(\"path\")\n                                .attr(\"d\", path);\n            \n                foreground_lines = svg.append(\"g\")\n                                .attr(\"class\", \"foreground\")\n                                .selectAll(\"path\")\n                                .data(state)\n                                .enter().append(\"path\")\n                                .attr(\"d\", path)\n                                .style(\"stroke\",function(d){return colormap[d['color']]});\n            \n                var g = svg.selectAll(\".dimension\")\n                            .data(dimensions)\n                            .enter().append(\"g\")\n                            .attr(\"class\", \"dimension\")\n                            .attr(\"transform\", function(d) { return \"translate(\" + x(d.name) + \")\"; })\n                            .call(d3.drag()\n                            .on(\"start\", function(d) {\n                                    dragging[d.name] = x(d.name);\n                                    background_lines.attr(\"visibility\",\"hidden\");\n                                    })\n                            .on(\"drag\", function(d) {\n                                dragging[d.name] = Math.min(width, Math.max(0, d3.event.x));\n                                foreground_lines.attr(\"d\", path);\n                                dimensions.sort(function(a, b) { return coordinate(a) - coordinate(b); });\n                                x.domain(dimensions.map(function(d) { return d.name; }));\n                                g.attr(\"transform\", function(d) { return \"translate(\" + coordinate(d) + \")\"; })\n                            })\n                            .on(\"end\", function(d) {\n                                delete dragging[d.name];\n                                transition(d3.select(this)).attr(\"transform\", \"translate(\" + x(d.name) + \")\");\n                                transition(foreground_lines).attr(\"d\", path);\n                                background_lines\n                                    .attr(\"d\", path)\n                                    .transition()\n                                    .delay(500)\n                                    .duration(0)\n                                    .attr(\"visibility\", null);\n                            })\n                        );\n                \n                g.append(\"g\")\n                .attr(\"class\", \"axis\")\n                .each(function(d) { \n                    d3.select(this)\n                    .call(d3.axisLeft()\n                    .scale(d.scale));\n                 })\n                .append(\"text\")\n                .style(\"text-anchor\", \"middle\")\n                .attr(\"class\", \"axis-label\")\n                .attr(\"y\", -19)\n                .style(\"fill\",\"black\")\n                .style(\"font-size\",7)\n                .text(function(d) { return d.name; });\n                \n                g.append(\"g\")\n                    .attr(\"class\", \"brush\")\n                    .each(function(d)\n                    {\n                        d3.select(this)\n                        .call(d.scale.brush = d3.brushY().extent([[-10,0],[10,height]])\n                        .on(\"start\", brushstart)\n                        .on(\"brush\", function(d){brush(svg)})\n                        .on(\"end\", function(d){brush(svg)}));\n                    })\n                    .selectAll(\"rect\")\n                    .attr(\"x\", -8)\n                    .attr(\"width\", 16);\n            }\n        }\n    }\n    return(\n        <div>\n            <h3><u>Parallel Coordinates Plot</u></h3>\n            <input type=\"checkbox\" id=\"mds\" name=\"mds\" value=\"mds\" onChange={handleChange}></input>\n            <label for=\"mds\"> Select to Activate MDS-PCP Mode </label>\n            {\n              state ? <div>\n                  <svg ref={scatterRef}></svg>\n                  <div className=\"legend\"><b>Color Legend</b><br/>\n                        Red   -  Cluster 1<br/>\n                        Blue  -  Cluster 2<br/>\n                        Black-  Cluster 3<br/>\n                        Green  -  Cluster 4<br/>\n                  </div>\n                  <br/>\n                  </div> : <div />\n            }\n        </div>\n    );\n\n};\nexport default Pcp;\n\n\n","import React,{useEffect,useRef,useState} from 'react';\nimport * as d3 from 'd3';\nimport '../css/ScatterPlot.css';\nimport axios from 'axios';\n\n const MdsVariable = (props) => {\n\n    let scatterRef = useRef(null);\n    const [state, setState] = useState();\n    let data= props.data;\n    let width = 1000;\n    let height = 500;\n    const margin_left=100;\n    const margin_right=30;\n    const margin_top=20;\n    const margin_bottom=100;\n    const effective_width= width - margin_left - margin_right;\n    const effective_height= height - margin_top - margin_bottom;\n    let xData ; \n    let yData ; \n    let color ; \n    const colormap=[\"red\",\"blue\",\"black\",\"green\"];\n    var key_array_for_pcp=[];\n    useEffect(()=>{\n        axios.get('http://localhost:5000/mds_variable').then((repos) => {\n            const allRepos = repos.data;\n            let parsedResponse = JSON.parse(allRepos);\n            let tempState = {'first':parsedResponse['first'],'second':parsedResponse['second'],'name':parsedResponse['name']};\n            setState(tempState);\n            clearBoard();\n            draw();\n      });\n        clearBoard();\n    },[]);\n\n    useEffect(()=>{\n        clearBoard();\n        draw();\n    },[state])\n\n    const clearBoard=()=>{\n        const accessToRef = d3.select(scatterRef.current)\n        accessToRef.selectAll(\"svg > *\").remove();\n    }\n\n    const draw =() =>{\n        if(state!=undefined)\n        {\n            xData = state.first;\n            yData = state.second;\n        }\n        if(xData!=undefined && yData!=undefined)\n        {\n            const accessToRef = d3.select(scatterRef.current)\n                                    .attr(\"height\",height)\n                                    .attr(\"width\",width)\n                                    .style(\"background-color\",\"#f5f5f5\")\n                                    .append(\"g\")\n                                    .attr(\"transform\", \"translate(\" + margin_left + \",\" + margin_top + \")\");\n\n            var xAxis= d3.scaleLinear()\n                        .domain([d3.min(Object.keys(xData), function(d) { return 1.2*xData[d] }), d3.max(Object.keys(xData), function(d) { return 1.2*xData[d] })])\n                        .range([ 0, effective_width ]);\n            \n            accessToRef.append(\"g\")\n                    .attr(\"transform\", \"translate(0,\" + effective_height + \")\")\n                    .call(d3.axisBottom(xAxis))\n                    .call(g => g.append(\"text\")\n                        .style(\"font-size\", \"18px\")\n                        .attr(\"x\", effective_width/2)\n                        .attr(\"y\", -margin_top+80)\n                        .attr(\"fill\", \"blue\")\n                        .attr(\"text-anchor\", \"start\")\n                        .text(\"Component 1\"));\n            \n            var yAxis = d3.scaleLinear()\n                    .domain([d3.min(Object.keys(yData), function(d) { return 1.2*yData[d] }), d3.max(Object.keys(yData), function(d) { return 1.2*yData[d] })])\n                    .range([ effective_height, 0]);\n\n            accessToRef.append(\"g\")\n                .call(d3.axisLeft(yAxis))\n                .call(g => g.append(\"text\")\n                    .style(\"font-size\", \"18px\")\n                    .attr(\"x\", -effective_height/2+100)\n                    .attr(\"y\", -margin_left+20)\n                    .attr(\"fill\", \"red\")\n                    .attr(\"text-anchor\", \"end\")\n                    .attr(\"transform\", \"rotate(-90)\")\n                    .text(\"Component 2\"));\n            \n            let gNode = accessToRef.append('g');\n\n                gNode.selectAll(\"dot\")\n                .data(Object.keys(xData))\n                .enter()\n                    .append(\"circle\")\n                    .attr(\"cx\", function (d) { return xAxis(xData[d])  })\n                    .attr(\"cy\", function (d) { return yAxis(yData[d]) } )\n                    .attr(\"r\", 5)\n                    .style(\"fill\", function (d) { return \"red\"})\n                    .on('click', function (d, i) {\n                        d3.select(this)\n                             .transition()\n                             .duration('50')\n                             .style(\"fill\",\"blue\");\n                        key_array_for_pcp.push(state.name[d]);\n                        props.updateStatePCP(key_array_for_pcp);\n                    });\n\n                \n                gNode.selectAll(\"text\")\n                    .data(Object.keys(state.name))\n                    .enter()\n                    .append(\"text\")\n                    .style(\"font-size\", \"10px\")\n                    .attr(\"x\", function (d) { return xAxis(xData[d])+10})\n                    .attr(\"y\", function (d) { return yAxis(yData[d])+4 })\n                    .attr(\"fill\", \"black\")\n                    .text(function(d){return state.name[d]});\n        }\n}\n    return(\n        <div>\n            <br/><br/>\n            {\n              state ? <div>\n                  <h3><u>MDS Variable's Plot using  (1-|correlation|) distance</u></h3>\n                  <div>Click on Points for selecting Axis for Parallel Coordinates Plot</div>\n                  <svg ref={scatterRef}></svg></div> : <div />\n            }\n        </div>\n    );\n\n};\nexport default MdsVariable;\n\n\n","import './App.css';\nimport {useState,useEffect} from 'react';\nimport axios from 'axios';\nimport NavBar from '../src/components/NavBar';\nimport HomePage from '../src/components/HomePage';\nimport ScreePlot from './components/ScreePlot';\nimport BiPlot from './components/BiPlot';\nimport ScatterPlotMatrix from './components/ScatterPlotMatrix';\nimport ScatterPlot from './components/ScatterPlot';\nimport Pcp from './components/Pcp';\nimport MdsVariable from './components/MdsVariable';\n\nfunction App() {\n\n  const [state, setState] = useState(0);\n  const [dataState, setDataState] = useState();\n  const [scree, setScreeState] = useState();\n  const [dimensionality, setDimState] = useState();\n  const [mdsPcp, setMDSPCP] = useState();\n  let numerical;\n  let categorical;\n\n  const selectChart=(chartN)=>{\n    setState(chartN);\n  };\n\n  const updatePCP=(arr)=>{\n    setMDSPCP(arr);\n  };\n\n  const selDimNumber=(n)=>{\n    setDimState(n);\n  };\n\n  useEffect(()=>{\n\n    axios.get('http://localhost:5000/scree_plot').then((repos) => {\n      const allRepos = repos.data;\n      setScreeState(allRepos);\n    });\n\n  },[state]);\n  numerical =[\"Extremely Low Income Units\",\"Very Low Income Units\",\"Low Income Units\",\"Counted Rental Units\",\"Counted Homeownership Units\",\"All Counted Units\",\"Total Units\"];\n  categorical =[\"Program Group\",\"Borough\",\"Postcode\",\"Council District\",\"Census Tract\",\"NTA - Neighborhood Tabulation Area\",\"Reporting Construction Type\",\"Prevailing Wage Status\"];\t\n\n  return (\n    <div>\n        <div className=\"header\"> <center><b> New York Housing Units by Building</b></center></div>\n          <center>\n            <NavBar changeChart={selectChart}/>\n          </center>\n          <div className=\"home\">\n            {state===0 ? <HomePage numeric={numerical} categoric={categorical} /> :<div/>}\n          </div>\n          <center>\n            {state===1 ? <ScreePlot changeDim={selDimNumber} />  : <div/>}\n            {state===2 ? <BiPlot/> : <div/>}\n            {state===3 ? <ScatterPlotMatrix dimensionality={dimensionality}/> : <div/>}\n            {state===4 ? <ScatterPlot /> : <div/>}\n            {state===5 ? <MdsVariable updateStatePCP={updatePCP}/> : <div/>}\n            {state===6 ? <Pcp readFromMDSV={mdsPcp} /> : <div/>}\n          </center>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}