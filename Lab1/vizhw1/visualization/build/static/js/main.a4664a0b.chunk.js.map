{"version":3,"sources":["components/BarChart.js","components/Histogram.js","components/ScatterPlot.js","molecules/Dropdown.js","components/NavBar.js","data/processed.csv","components/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["BarChart","props","colors","chartRef","useRef","data","effective_height","height","chartVariable","tip","d3tip","attr","offset","html","d","useEffect","clearBoard","draw","d3","current","selectAll","remove","dataGrouped","key","entries","length","newGroup","sort","a","b","values","i","push","others","obj","accessToRef","style","append","xAxis","domain","map","range","width","paddingInner","paddingOuter","call","g","effective_width","text","yAxis","barWidth","bandwidth","enter","on","show","this","transition","duration","hide","ref","Histogram","histoRef","selectedVariable","useState","secondX","isChangeBins","state","setState","firstXState","setFirstXState","nBins","setNBins","dragstarted","x","dragended","tempState","changeInBins","processedData","forEach","svg","bins","value","thresholds","ticks","histogram","x0","x1","ScatterPlot","scatterRef","xVariable","chartVariableX","yVariable","chartVariableY","isXNumeric","isYNumeric","xdataGrouped","ydataGrouped","axisNode","Math","random","className","id","Dropdown","chartNumber","type","name","onChange","htmlFor","variableNames","onClick","changeVariable","NavBar","allVariables","numericVariables","apply","categoricalVariables","selectVariable","axis","changeChart","src","HomePage","href","color","App","categorical","dataState","setDataState","currentVariable","setCurrentVariable","scatterVariables","setScatterVariables","numerical","csvFile","chartN","selVariable","indexOf","xvar","isXNum","yvar","isYNum","numeric","categoric","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4664a0b.chunk.js","sourcesContent":["import React,{useEffect,useRef} from 'react';\nimport * as d3 from 'd3';\nimport d3tip from \"d3-tip\";\n\n const BarChart=(props)=>{\n\n    const colors=[\"blue\",\"green\",\"gold\",\"grey\",\"orange\",\"yellow\",\"pink\",\"cyan\",\"magenta\",\"brown\",\"black\",\"tomato\"];\n\n    const chartRef = useRef(null);\n    let data= props.data;\n    const width = 1000;\n    const height = 500;\n    const margin_left=100;\n    const margin_right=30;\n    const margin_top=20;\n    const margin_bottom=100;\n    const effective_width= width - margin_left - margin_right;\n    const effective_height= height - margin_top - margin_bottom;\n    let chartVariable= props.chartVariable;\n\n    const tip = d3tip()\n    .attr('class', 'd3-tip animate')\n    .offset([-20, 0])\n    .html(function(d) {\n        return '<strong><font color=\"red\">'+ d+'</font></strong>';\n      });\n\n    useEffect(()=>{\n        clearBoard();\n        draw();\n    },[props]);\n\n    const clearBoard = ()=>{\n        const accessToRef = d3.select(chartRef.current)\n        accessToRef.selectAll(\"svg > *\").remove();\n        d3.select(\".d3-tip\").remove();\n    }\n\n    const draw=()=>{\n        //process raw data using group by\n        let dataGrouped = d3.nest() \n        .key(function (d) { return d[chartVariable]; }) \n        .entries(data); \n\n        if(dataGrouped.length>20)\n        {\n            let newGroup=[];\n            dataGrouped.sort(function(a, b) {\n                return b.values.length - a.values.length;\n            });\n            for(let i=0;i<20;i++)\n            {\n                newGroup.push(dataGrouped[i]);\n            }\n            let others=0;\n            for(let i=20;i<dataGrouped.length;i++)\n            {\n                others+=dataGrouped[i].values.length;\n            }\n            let obj ={key:\"Other\",values:{length:others}};\n            newGroup.push(obj);\n            dataGrouped=newGroup;\n        }\n        \n        const accessToRef = d3.select(chartRef.current)\n        .attr(\"height\",height)\n        .attr(\"width\",width)\n        .style(\"background-color\",\"#f5f5f5\")\n        .append(\"g\")\n            .attr(\"transform\",\"translate(\"+margin_left+\",\"+margin_top+\")\"); \n\n        var xAxis = d3.scaleBand()\n                    .domain(dataGrouped.map(function(d) { return d.key; }))\n                    .range([0, effective_width])\n                    .paddingInner(0.1)\n                    .paddingOuter(0.1);\n\n        accessToRef.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + effective_height + \")\")\n            .call(d3.axisBottom(xAxis))\n            .call(g => g.append(\"text\")\n                .style(\"font-size\", \"18px\")\n                .attr(\"x\", effective_width/2)\n                .attr(\"y\", -margin_top+80)\n                .attr(\"fill\", \"currentColor\")\n                .attr(\"text-anchor\", \"start\")\n                .text(chartVariable));\n\n        var yAxis = d3.scaleLinear()\n            .range([effective_height, 0])\n            .domain([0, d3.max(dataGrouped,function(d) { return 1.2*d.values.length; })]); \n  \n        accessToRef.append(\"g\")\n            //.attr(\"transform\", \"translate(0\"+\",\"+margin_bottom+\")\")\n            .call(d3.axisLeft(yAxis))\n            .call(g => g.append(\"text\")\n                .style(\"font-size\", \"18px\")\n                .attr(\"x\", -effective_height/2)\n                .attr(\"y\", -margin_left+20)\n                .attr(\"fill\", \"currentColor\")\n                .attr(\"text-anchor\", \"end\")\n                .attr(\"transform\", \"rotate(-90)\")\n                .text(\"Frequency\"));\n\n        let barWidth= xAxis.bandwidth();\n        accessToRef.selectAll(\"rect\")\n            .data(dataGrouped)\n            .enter()\n            .append(\"rect\")\n                .attr(\"x\",(d,i) => {return xAxis(d.key)})\n                .attr(\"y\",(d,i) => { return  yAxis(d.values.length)})\n                .attr(\"width\", barWidth)\n                .attr(\"height\",(d,i)=> {return effective_height - yAxis(d.values.length)})\n                .style(\"fill\",(d,i)=> colors[i%12])\n                .on('mouseover', function (d, i) {\n                    tip.show(d.values.length,this);\n                    d3.select(this)\n                         .transition()\n                         .duration('50')\n                         //.attr(\"transform\",function(d){ return \"translate(\"+xAxis(d.key)+\",\"+(yAxis(d.values.length)-5)+\")\"})\n                         //.attr(\"height\", function(d) { return (effective_height - yAxis(d.values.length)+5); })\n                         .style(\"fill\",\"red\");\n                })\n                .on('mouseout', function (d, i) {\n                    d3.select(this).transition()\n                         .duration('50')\n                         //.attr(\"transform\",function(d){ return \"translate(\"+xAxis(d.key)+\",\"+yAxis(d.values.length)+\")\"})\n                         //.attr(\"height\", function(d) { return effective_height - yAxis(d.length); })\n                         .style(\"fill\",colors[i%12]);\n                    tip.hide();\n                });\n        accessToRef.call(tip);\n    }\n\n    return(\n        <div>\n            <br/><br/><br/>\n            <svg ref={chartRef}></svg>\n        </div>\n    );\n};\n\nexport default BarChart;\n","import React,{useEffect,useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport d3tip from \"d3-tip\";\n\n const Histogram = (props) => {\n\n    let histoRef = useRef(null);\n    let data= props.data;\n    let width = 1000;\n    let height = 500;\n    const margin_left=100;\n    const margin_right=30;\n    const margin_top=20;\n    const margin_bottom=100;\n    const effective_height = height - margin_bottom - margin_top;\n    const effective_width = width - margin_left -  margin_right;\n    const bar_magnification =  0.1;\n    const selectedVariable=props.chartVariable;\n    const binChangeSize = 5;\n\n    const [state, setState] = useState({secondX:0,isChangeBins:false});\n    const [firstXState, setFirstXState] = useState(0);\n    const [nBins, setNBins] = useState(10);\n\n    const tip = d3tip()\n    .attr('class', 'd3-tip animate')\n    .offset([-20, 0])\n    .html(function(d) {\n        return '<strong><font color=\"red\">'+ d+'</font></strong>';\n      });\n\n    const dragstarted=()=>{\n        var current = d3.select(this);\n        var a=d3.event.x;\n        setFirstXState(a);\n    }\n\n    const dragended=()=>{\n        var current = d3.select(this);\n        var a=d3.event.x;\n        var tempState = {...state, secondX:a, isChangeBins:true};\n        setState(tempState);\n    }\n\n    useEffect(()=>{\n        setFirstXState(firstXState);\n    },[firstXState]);\n\n    useEffect(()=>{\n        clearBoard();\n        if(state.isChangeBins)\n        {\n            let changeInBins=0;\n            if(firstXState-state.secondX<0)\n                changeInBins=-1*binChangeSize;\n            else if(firstXState-state.secondX>0)\n                changeInBins=binChangeSize;\n            setState({...state,isChangeBins:false});\n\n            draw(changeInBins);\n        }   \n        else\n        {\n                draw(0);\n        }\n    },[state,props]);\n\n    const clearBoard = ()=>{\n        const accessToRef = d3.select(histoRef.current)\n        accessToRef.selectAll(\"svg > *\").remove();\n        d3.select(\".d3-tip\").remove();\n    }\n\n    const draw =(changeInBins) =>{\n\n        let processedData=[];\n        data.forEach(function(d) {\t\t\t\n            processedData.push(+d[selectedVariable]);\n        })\n        const accessToRef = d3.select(histoRef.current)\n        .attr(\"height\",height)\n        .attr(\"width\",width)\n        .style(\"background-color\",\"#f5f5f5\")\n        .append(\"g\")\n            .attr(\"transform\",\"translate(\"+margin_left+\",\"+margin_top+\")\"); \n\n         //make a background node\n         const background = accessToRef\n         .append(\"rect\")\n         .attr(\"x\", 0)\n         .attr(\"y\", 0)\n         .attr(\"width\", effective_width)\n         .attr(\"height\", effective_height)\n         .style(\"fill\",\"#f5f5f5\")\n         .call(d3.drag()\n         .on(\"start\",dragstarted)\n         .on(\"end\",dragended));\n\n        const svg = accessToRef;\n        var xAxis = d3.scaleLinear()\n                    .domain([0, d3.max(processedData, function(d) { return d })])\n                    .range([0, effective_width]);\n\n        svg.append(\"g\")\n           .attr(\"transform\", \"translate(0,\" + effective_height + \")\")\n           .call(d3.axisBottom(xAxis))\n           .call(g => g.append(\"text\")\n            .style(\"font-size\", \"18px\")\n            .attr(\"x\", effective_width/2)\n            .attr(\"y\", -margin_top+80)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .text(selectedVariable));\n        \n        if(nBins+changeInBins>=0)\n            setNBins(nBins+changeInBins);\n        var histogram = d3.histogram()\n            .value(function(d) { return d; })\n            .domain(xAxis.domain())  \n            .thresholds(xAxis.ticks(nBins)); // then the numbers of bins\n        var bins = histogram(processedData);\n        var yAxis = d3.scaleLinear()\n                  .range([effective_height, 0])\n                  .domain([0, d3.max(bins, function(d) { return 1.2*d.length; })]);  \n        \n        svg.append(\"g\")\n           //.attr(\"transform\", \"translate(0\"+\",\"+margin_bottom+\")\")\n           .call(d3.axisLeft(yAxis))\n           .call(g => g.append(\"text\")\n            .style(\"font-size\", \"18px\")\n            .attr(\"x\", -effective_height/2)\n            .attr(\"y\", -margin_left+20)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .text(\"Frequency\"));\n          \n        svg.append(\"g\")\n            //.attr(\"transform\", \"translate(0\"+\",\"+margin_bottom+\")\")\n            .selectAll(\"rect\")\n            .data(bins)\n            .enter()\n            .append(\"rect\")\n            .attr(\"x\", 1)\n            .attr(\"transform\", function(d) { return \"translate(\" + xAxis(d.x0) + \",\" + yAxis(d.length) + \")\"; })\n            .attr(\"width\", function(d) { return d.x1!==d.x0 ?  xAxis(d.x1) - xAxis(d.x0) -1 : bins[0].x1-bins[0].x0 ; })\n            .attr(\"height\", function(d) { return  effective_height - yAxis(d.length); })\n            .style(\"fill\", \"#2e8083\")\n            .on('mouseover', function (d, i) {\n                //tip.rootElement(this);\n                tip.show(d.length,this);\n                d3.select(this)\n                     .transition()\n                     .duration('50')\n                     .attr(\"transform\",function(d){ return \"translate(\"+xAxis(d.x0)+\",\"+(yAxis(d.length)-5)+\")\"})\n                     //.attr(\"width\", function(d) { return (1+bar_magnification)*(d.x1!==d.x0 ?  xAxis(d.x1) - xAxis(d.x0) -1 : bins[0].x1-bins[0].x0) ; })\n                     .attr(\"height\", function(d) { return (effective_height - yAxis(d.length)+5); })\n                     .style(\"fill\",\"red\");\n                \n                //tip.html(\"<strong><span style='color:black'>\"+ d + \"</strong></span>\");\n                \n            })\n            .on('mouseout', function (d, i) {\n                d3.select(this).transition()\n                     .duration('50')\n                     .attr(\"transform\",function(d){ return \"translate(\"+xAxis(d.x0)+\",\"+yAxis(d.length)+\")\"})\n                     //.attr(\"width\", function(d) { return d.x1!==d.x0 ?  xAxis(d.x1) - xAxis(d.x0) -1 : bins[0].x1-bins[0].x0 ; })\n                     .attr(\"height\", function(d) { return effective_height - yAxis(d.length); })\n                     .style(\"fill\",\"#2e8083\");\n                tip.hide();\n            })\n            .call(d3.drag()\n                .on(\"start\",dragstarted)\n                .on(\"end\",dragended));\n\n\t    svg.call(tip);\n\n    };\n\n    return(\n        <div>\n            \n            <svg ref={histoRef}></svg>\n        </div>\n    );\n\n};\nexport default Histogram;\n\n\n","import React,{useEffect,useRef,useState} from 'react';\nimport * as d3 from 'd3';\nimport '../css/ScatterPlot.css';\n\n const ScatterPlot = (props) => {\n\n    let scatterRef = useRef(null);\n    let data= props.data;\n    let width = 1000;\n    let height = 500;\n    const margin_left=100;\n    const margin_right=30;\n    const margin_top=20;\n    const margin_bottom=100;\n    const effective_width= width - margin_left - margin_right;\n    const effective_height= height - margin_top - margin_bottom;\n    const xVariable = props.chartVariableX;\n    const yVariable = props.chartVariableY;\n    const isXNumeric = props.isXNumeric;\n    const isYNumeric = props.isYNumeric;\n\n    useEffect(()=>{\n        clearBoard();\n        draw();\n    },[props]);\n\n    const clearBoard=()=>{\n        const accessToRef = d3.select(scatterRef.current)\n        accessToRef.selectAll(\"svg > *\").remove();\n    }\n\n    const draw =() =>{\n\n        let xdataGrouped,ydataGrouped;\n\n        const accessToRef = d3.select(scatterRef.current)\n                                .attr(\"height\",height)\n                                .attr(\"width\",width)\n                                .style(\"background-color\",\"#f5f5f5\")\n                                .append(\"g\")\n                                    .attr(\"transform\", \"translate(\" + margin_left + \",\" + margin_top + \")\");\n\n        var xAxis;\n        if(isXNumeric)\n        {   xAxis= d3.scaleLinear()\n                    .domain([0, d3.max(data, function(d) { return 1.2*d[xVariable] })])\n                    .range([ 0, effective_width ]);\n        }\n        else{\n            xdataGrouped= d3.nest() \n                            .key(function (d) { return d[xVariable]; }) \n                            .entries(data); \n            xAxis = d3.scaleBand()\n                        .domain(xdataGrouped.map(function(d) { return d.key; }))\n                        .range([0, effective_width])\n                        .paddingInner(0.1)\n                        .paddingOuter(0.1);\n        }\n\n        if(xdataGrouped && xdataGrouped.length>20)\n        {\n            let axisNode= accessToRef.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + effective_height + \")\")\n            .call(d3.axisBottom(xAxis));\n            \n            axisNode.selectAll(\"text\")\n            .attr(\"y\", 0)\n            .attr(\"x\", 10)\n            .attr(\"dy\", \".35em\")\n            .attr(\"transform\", \"rotate(90)\")\n            .style(\"text-anchor\", \"start\");\n\n            axisNode.call(g => g.append(\"text\")\n                .style(\"font-size\", \"18px\")\n                .attr(\"x\", effective_width/2)\n                .attr(\"y\", -margin_top+80)\n                .attr(\"fill\", \"blue\")\n                .attr(\"text-anchor\", \"start\")\n                .text(xVariable));\n\n        }\n        else{\n        accessToRef.append(\"g\")\n                   .attr(\"transform\", \"translate(0,\" + effective_height + \")\")\n                   .call(d3.axisBottom(xAxis))\n                   .call(g => g.append(\"text\")\n                    .style(\"font-size\", \"18px\")\n                    .attr(\"x\", effective_width/2)\n                    .attr(\"y\", -margin_top+80)\n                    .attr(\"fill\", \"blue\")\n                    .attr(\"text-anchor\", \"start\")\n                    .text(xVariable));\n        }\n        var yAxis;\n        if(isYNumeric)\n        {   yAxis = d3.scaleLinear()\n                  .domain([0, d3.max(data, function(d) { return 1.2*d[yVariable] })])\n                  .range([ effective_height, 0]);\n        }\n        else{\n            ydataGrouped= d3.nest() \n                                .key(function (d) { return d[yVariable]; }) \n                                .entries(data); \n            yAxis = d3.scaleBand()\n                .domain(ydataGrouped.map(function(d) { return d.key; }))\n                .range([effective_height, 0])\n                .paddingInner(0.1)\n                .paddingOuter(0.1);\n        }\n\n        accessToRef.append(\"g\")\n            .call(d3.axisLeft(yAxis))\n            .call(g => g.append(\"text\")\n                .style(\"font-size\", \"18px\")\n                .attr(\"x\", -effective_height/2+100)\n                .attr(\"y\", -margin_left+20)\n                .attr(\"fill\", \"red\")\n                .attr(\"text-anchor\", \"end\")\n                .attr(\"transform\", \"rotate(-90)\")\n                .text(yVariable));\n        \n        if(!isXNumeric && !isYNumeric && (xdataGrouped && xdataGrouped.length<=20) && (ydataGrouped && ydataGrouped.length<=20))\n        {\n            accessToRef.append('g')\n            .selectAll(\"dot\")\n            .data(data)\n            .enter()\n                .append(\"circle\")\n                .attr(\"cx\", function (d) { return  xAxis(d[xVariable])+xAxis.bandwidth()/2 + ((Math.random()*2 -1)*30) })\n                .attr(\"cy\", function (d) { return  yAxis(d[yVariable])+yAxis.bandwidth()/2 + ((Math.random()*2-1)*30) } )\n                .attr(\"r\", 3)\n                .style(\"fill\", \"green\")   ;\n        }   \n        else{     \n        accessToRef.append('g')\n            .selectAll(\"dot\")\n            .data(data)\n            .enter()\n                .append(\"circle\")\n                .attr(\"cx\", function (d) { return isXNumeric? xAxis(d[xVariable]) : xAxis(d[xVariable])+xAxis.bandwidth()/2 })\n                .attr(\"cy\", function (d) { return isYNumeric? yAxis(d[yVariable]) : yAxis(d[yVariable])+yAxis.bandwidth()/2 } )\n                .attr(\"r\", 3)\n                .style(\"fill\", \"green\")   ;\n        }\n\n    }\n    return(\n        <div>\n            <span>{ <div>\n                        <div className=\"scatterText\" id=\"xvar\"><b>Variable on X axis: {xVariable ? xVariable : \"Select X axis variable\"}</b></div>\n                        <div className=\"scatterText\" id=\"yvar\"><b>Variable on Y axis: {yVariable ? yVariable : \"Select Y axis variable\"}</b></div>\n                    </div>\n                }</span>\n            {\n              xVariable && yVariable ? <svg ref={scatterRef}></svg> : <div />\n            }\n        </div>\n    );\n\n};\nexport default ScatterPlot;\n\n\n","import '../css/Dropdown.css';\nimport React,{useState} from 'react';\n\nconst Dropdown=(props)=>{\n    \n    const [state,setState] = useState('');\n    let axisType;\n    return(\n             <div>\n                { (props.chartNumber===3) ?   <div className=\"radioSelection\"><b>Select Axis: \n                        <input type=\"radio\" id=\"axis\" name=\"axis\" value=\"x Axis\" onChange={()=>setState(\"x\")}></input>\n                        <label htmlFor=\"axis\">X Axis</label>\n                        <input type=\"radio\" id=\"axis\" name=\"axis\" value=\"y Axis\" onChange={()=>setState(\"y\")}></input>\n                        <label htmlFor=\"axis\">Y Axis</label>\n                        </b>\n                  </div>\n                  :<div/>\n                }\n                {\n                    props.variableNames.map(function(name, i){ \n                    return <div className=\"option\" key={ i } onClick={()=>props.changeVariable(props.chartNumber,name,state)}><b>{name}</b></div> \n                    })\n                }\n            </div>\n    );\n};\n\nexport default Dropdown;","import '../css/NavBar.css';\nimport React from 'react';\nimport Dropdown from '../molecules/Dropdown';\n\nconst NavBar=(props)=>{\n\n    let allVariables= [...props.numericVariables];\n    allVariables.push.apply(allVariables,props.categoricalVariables);\n    let selectedVariable;\n\n    const selectVariable=(chartNumber,selectedVariable,axis)=>{\n        props.changeChart(chartNumber,selectedVariable,axis);\n    }\n    \n    return(\n         <div className=\"mainBar\">\n            <div className=\"options\">\n                <img src=\"https://img.icons8.com/pastel-glyph/64/000000/bar-chart.png\" height=\"15\" width=\"15\"/><br/><br/>\n                <b>Bar Chart </b>\n                <div className=\"dropDownMenu\">\n                    <Dropdown variableNames={props.categoricalVariables} chartNumber={1} changeVariable={selectVariable}/>\n                </div>\n            </div>\n            <div className=\"options\">\n                <img src=\"https://img.icons8.com/metro/26/000000/combo-chart.png\" height=\"15\" width=\"15\" /><br/><br/>\n                <b>Histogram </b>\n                <div className=\"dropDownMenu\">\n                    <Dropdown variableNames={props.numericVariables} chartNumber={2} changeVariable={selectVariable}/>\n                </div>\n            </div>\n            <div className=\"options\">\n                <img src=\"https://img.icons8.com/metro/26/000000/scatter-plot.png\" height=\"15\" width=\"15\" /><br/><br/>\n                <b>ScatterPlot </b>\n                <div className=\"dropDownMenu\">\n                    <Dropdown variableNames={allVariables} chartNumber={3} changeVariable={selectVariable}/>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default NavBar;","export default __webpack_public_path__ + \"static/media/processed.1819ef90.csv\";","import React from 'react';\n\n const HomePage = (props) => {\n\n\n    return(\n        <div>\n            <div> \n                <br/><br/><br/>\n                <div style={{width:\"80%\"}}>\n                This project is completed in accordance with the requirements of the course CSE-564 : Visualization at Stony Brook University.<br/>\n                The project provides an interactive Visualization of New York Housing Units Data (by buildings) made publically available at NYC OpenData(<a href=\"https://data.cityofnewyork.us/Housing-Development/Housing-New-York-Units-by-Building/hg8x-zxpr\">here</a>) by The Department of Housing Preservation and Development (HPD).<br/><br/>\n            \n                The dataset contains New Yorks housing data per building for each building project and its related data. The dataset consists of 4,732 Rows and 42 Columns. The data was processed, cleaned to obtain a dataset of 15(+1) useful columns and 1500 randomly sampled rows using a python script.\n\n                The following are the definitions of the attributes in the sampled data:<br/>\n                \n                    <ul><b>Numeric Variables</b>\n                    <li><b><font style={{color:\"#2e8083\"}}>Extremely Low Income Units</font></b> - Units with rents that are affordable to households earning 0 to 30% of the area median income (AMI).</li>\n                    <li><b><font style={{color:\"#2e8083\"}}>Very Low Income Units </font></b>- Units with rents that are affordable to households earning 31 to 50% of the area median income (AMI).</li>\n                    <li><b><font style={{color:\"#2e8083\"}}>Low Income Units </font></b>– Units with rents that are affordable to households earning 51 to 80% of the median income (AMI).</li>\n                    <li><b><font style={{color:\"#2e8083\"}}>Counted Rental Units </font></b>– Units where assistance has been provided to landlords for affordable units.</li>\n                    <li><b><font style={{color:\"#2e8083\"}}>Counted Homeownership Units </font></b>– Units where assistance has been provided directly to homeowners.</li>\n                    <li><b><font style={{color:\"#2e8083\"}}>Total Counted Units </font></b>- Total number of affordable, regulated units in the building. </li>\n                    <li><b><font style={{color:\"#2e8083\"}}>Total Units </font></b>- The total number of units, affordable and market rate, in each building.</li>\n\n                    </ul>\n                    <ul><b>Categorical Variables</b>\n                    <li><b><font style={{color:\"#2e8083\"}}> Program Group </font></b>- The project group/category for a building project</li>\n                    <li><b><font style={{color:\"#2e8083\"}}> Borough </font></b>- The Borough where the building is located.</li>\n                    <li><b><font style={{color:\"#2e8083\"}}> PostCode </font></b>- The ZipCode where the building is located.</li>\n                    <li><b><font style={{color:\"#2e8083\"}}> Council District </font></b>- The NYC Council District where the building is located.</li>\n                    <li><b><font style={{color:\"#2e8083\"}}> Census Tract </font></b> – The 2010 U.S. Census Tract number where the building is located.</li>\n                    <li><b><font style={{color:\"#2e8083\"}}> NTA - Neighborhood Tabulation Area </font></b>– The NYC Neighborhood Tabulation Area number where the building is located.</li>\n                    <li><b><font style={{color:\"#2e8083\"}}> Reporting Construction Type </font></b>– Either a ‘new construction’ or ‘preservation’\n                        <ul>\n                            <li>‘New construction’ – New affordable housing units are created, or down payment assistance is given to a homeowner to access an affordable home.</li>\n                            <li>‘Preservation’ - Existing buildings receive physical rehabilitation and/or financial operating assistance is for existing and future tenants. </li>\n                        </ul>\n                    </li>\n                    <li><b><font style={{color:\"#2e8083\"}}>Prevailing wage status </font></b>- Whether the project is subject to any prevailing wage requirements, such as Davis Bacon.</li>\n                    </ul>\n                </div>\n            </div>\n            <div>Source:<br/> \n                1. DataSet and Rephrased Definitions: https://data.cityofnewyork.us/Housing-Development/Housing-New-York-Units-by-Building/hg8x-zxpr<br/>\n                2. Icons : https://icons8.com/icons/\n            </div>\n        </div>\n    );\n\n};\nexport default HomePage;\n\n\n","import './App.css';\nimport {useState,useEffect} from 'react';\nimport * as d3 from \"d3\";\nimport BarChart from \"../src/components/BarChart\";\nimport Histogram from \"../src/components/Histogram\";\nimport ScatterPlot from \"../src/components/ScatterPlot\";\nimport NavBar from '../src/components/NavBar';\nimport csvFile from '../src/data/processed.csv';\nimport HomePage from '../src/components/HomePage';\n\nfunction App() {\n\n  const [state, setState] = useState(0);\n  const [dataState, setDataState] = useState();\n  const [currentVariable, setCurrentVariable] = useState('');\n  const [scatterVariables, setScatterVariables] = useState();\n  let csvData=[];\n  let data3=[{v1:1,v2:1},{v1:2,v2:2},{v1:3,v2:3},{v1:4,v2:4},{v1:5,v2:5}];\n  let variables= [\"v1\",\"v2\",\"v3\",\"v4\"];\n  let numerical = [\"v1\",\"v2\",\"v4\"];\n  let categorical =[\"v3\"];\n\n  const selectChart=(chartN,selVariable,axis)=>{\n    setState(chartN);\n    setCurrentVariable(selVariable);\n    if(chartN===3)\n    {\n      let isXNumeric = \"\", isYNumeric = \"\", xVariable = \"\", yVariable = \"\";\n      let tempState= {...scatterVariables};\n      if(axis===\"x\")\n      {\n        //xVariable=selVariable;\n        isXNumeric= numerical.indexOf(selVariable) !== -1 ? true : false;\n        tempState.xvar=selVariable;\n        tempState.isXNum = isXNumeric;\n      }\n      if(axis===\"y\")\n      {\n        //yVariable=selVariable;\n        isYNumeric= numerical.indexOf(selVariable) !== -1 ? true : false;\n        tempState.yvar=selVariable;\n        tempState.isYNum = isYNumeric;\n      }\n      setScatterVariables(tempState);\n    }\n    else{\n      setScatterVariables('');\n    }\n  };\n\n  useEffect(()=>{\n    d3.csv(csvFile,function(data){csvData=data;setDataState(data)});\n  },[currentVariable]);\n  numerical =[\"Extremely Low Income Units\",\"Very Low Income Units\",\"Low Income Units\",\"Counted Rental Units\",\"Counted Homeownership Units\",\"All Counted Units\",\"Total Units\"];\n  categorical =[\"Program Group\",\"Borough\",\"Postcode\",\"Council District\",\"Census Tract\",\"NTA - Neighborhood Tabulation Area\",\"Reporting Construction Type\",\"Prevailing Wage Status\"];\t\n\n  return (\n    <div>\n        <div className=\"header\"> <center><b> New York Housing Units by Building</b></center></div>\n          <center>\n            <NavBar changeChart={selectChart} numericVariables={numerical} categoricalVariables={categorical} />\n          </center>\n          <div className=\"home\">\n            {state===0 ? <HomePage numeric={numerical} categoric={categorical} /> :<div/>}\n          </div>\n          <center>\n            {state===1 ? <BarChart data={dataState} chartVariable={currentVariable}/>  : <div/>}\n            {state===2 ? <Histogram data={dataState} chartVariable={currentVariable}/> : <div/>}\n            {state===3 ? <ScatterPlot data={dataState} chartVariableX={scatterVariables.xvar} chartVariableY={scatterVariables.yvar} isXNumeric={scatterVariables.isXNum} isYNumeric={scatterVariables.isYNum}/> : <div/>}\n          </center>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}